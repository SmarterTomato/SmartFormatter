{
	"name": "smart-formatter",
	"displayName": "SmartFormatter",
	"description": "A VS Code extension formats string in anyway you like. Similar functions to FreeFormatter.com",
	"version": "1.0.0",
	"engines": {
		"vscode": "^1.46.0"
	},
	"categories": [
		"Formatters",
		"Other"
	],
	"publisher": "SmarterTomato",
	"author": {
		"name": "Smarter Tomato"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/SmarterTomato/SmartFormatter.git"
	},
	"homepage": "https://github.com/SmarterTomato/SmartFormatter/blob/master/README.md",
	"bugs": {
		"url": "https://github.com/SmarterTomato/SmartFormatter/issues",
		"email": "smartertomato@gmail.com"
	},
	"license": "MIT",
	"activationEvents": [
		"onCommand:stringFormatter.toUpperCase",
		"onCommand:stringFormatter.toLowerCase",
		"onCommand:stringFormatter.toSentenceCase",
		"onCommand:stringFormatter.toTitleCase",
		"onCommand:stringFormatter.toSingleLine",
		"onCommand:variableFormatter.toUnderscoreVariable",
		"onCommand:variableFormatter.toPascalCase",
		"onCommand:variableFormatter.toCamelCase",
		"onCommand:variableFormatter.toCustomVariable",
		"onCommand:escapeFormatter.escape",
		"onCommand:escapeFormatter.unescape",
		"onCommand:escapeFormatter.escapeWithLanguage",
		"onCommand:escapeFormatter.unescapeWithLanguage",
		"onCommand:escapeFormatter.escapeStringValue",
		"onCommand:escapeFormatter.unescapeStringValue"
	],
	"icon": "resources/images/icon.png",
	"main": "./out/extension.js",
	"contributes": {
		"commands": [{
				"command": "stringFormatter.toUpperCase",
				"title": "To \"UPPER CASE\"",
				"category": "SmartFormatter.StringFormatter",
				"enablement": "config.stringFormatter.enable"
			},
			{
				"command": "stringFormatter.toLowerCase",
				"title": "To \"lower case\"",
				"category": "SmartFormatter.StringFormatter",
				"enablement": "config.stringFormatter.enable"
			},
			{
				"command": "stringFormatter.toSentenceCase",
				"title": "To \"Sentence case\"",
				"category": "SmartFormatter.StringFormatter",
				"enablement": "config.stringFormatter.enable"
			},
			{
				"command": "stringFormatter.toTitleCase",
				"title": "To \"Title Case\"",
				"category": "SmartFormatter.StringFormatter",
				"enablement": "config.stringFormatter.enable"
			},
			{
				"command": "stringFormatter.toSingleLine",
				"title": "To Single Line",
				"category": "SmartFormatter.StringFormatter",
				"enablement": "config.stringFormatter.enable"
			},
			{
				"command": "variableFormatter.toUnderscoreVariable",
				"title": "To \"Underscore_Variable\"",
				"category": "SmartFormatter.VariableFormatter",
				"enablement": "config.variableFormatter.enable"
			},
			{
				"command": "variableFormatter.toPascalCase",
				"title": "To \"PascalCase\"",
				"category": "SmartFormatter.VariableFormatter",
				"enablement": "config.variableFormatter.enable"
			},
			{
				"command": "variableFormatter.toCamelCase",
				"title": "To \"camelCase\"",
				"category": "SmartFormatter.VariableFormatter",
				"enablement": "config.variableFormatter.enable"
			},
			{
				"command": "variableFormatter.toCustomVariable",
				"title": "To Custom Variable",
				"category": "SmartFormatter.VariableFormatter",
				"enablement": "config.variableFormatter.enable"
			},
			{
				"command": "escapeFormatter.escape",
				"title": "Escape",
				"category": "SmartFormatter.EscapeFormatter",
				"enablement": "config.escapeFormatter.enable"
			},
			{
				"command": "escapeFormatter.unescape",
				"title": "Unescape",
				"category": "SmartFormatter.EscapeFormatter",
				"enablement": "config.escapeFormatter.enable"
			},
			{
				"command": "escapeFormatter.escapeWithLanguage",
				"title": "Escape With Language",
				"category": "SmartFormatter.EscapeFormatter",
				"enablement": "config.escapeFormatter.enable"
			},
			{
				"command": "escapeFormatter.unescapeWithLanguage",
				"title": "Unescape With Language",
				"category": "SmartFormatter.EscapeFormatter",
				"enablement": "config.escapeFormatter.enable"
			},
			{
				"command": "escapeFormatter.escapeStringValue",
				"title": "Escape string to value (Escape \"Quote\" and \"Backslash\")",
				"category": "SmartFormatter.EscapeFormatter",
				"enablement": "config.escapeFormatter.enable"
			},
			{
				"command": "escapeFormatter.unescapeStringValue",
				"title": "Unescape string from value (Unescape \"Quote\" and \"Backslash\")",
				"category": "SmartFormatter.EscapeFormatter",
				"enablement": "config.escapeFormatter.enable"
			}
		],
		"configuration": [{
			"title": "Smart Formatter",
			"properties": {
				"smartFormatter.stringFormatter.enable": {
					"type": "boolean",
					"default": true,
					"description": "Enable/disable string formatter commands."
				},
				"smartFormatter.variableFormatter.enable": {
					"type": "boolean",
					"default": true,
					"description": "Enable/disable variable formatter commands."
				},
				"smartFormatter.escapeFormatter.enable": {
					"type": "boolean",
					"default": true,
					"description": "Enable/disable escape formatter commands."
				},
				"smartFormatter.stringFormatter.toSingleLine.joinString": {
					"type": "string",
					"default": " ",
					"description": "The string to replace each line break"
				},
				"smartFormatter.variableFormatter.toVariableCustom.capitalizeWords": {
					"type": "boolean",
					"default": false,
					"description": "If formatted variable should be capitalized in custom mode"
				},
				"smartFormatter.variableFormatter.toVariableCustom.joinString": {
					"type": "string",
					"default": null,
					"description": "String added in between words in the variable. \nIf this is not set, will have a popup window ask for it"
				}
			}
		}]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"lint": "eslint src --ext ts",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/vscode": "^1.46.0",
		"@types/glob": "^7.1.1",
		"@types/mocha": "^7.0.2",
		"@types/node": "^13.11.0",
		"eslint": "^6.8.0",
		"@typescript-eslint/parser": "^2.30.0",
		"@typescript-eslint/eslint-plugin": "^2.30.0",
		"glob": "^7.1.6",
		"mocha": "^7.1.2",
		"typescript": "^3.8.3",
		"vscode-test": "^1.3.0"
	}
}
